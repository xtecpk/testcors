import { useState, useEffect } from "react";
import axios from "axios";
import { AgGridReact } from "@ag-grid-community/react";
import { ColDef, CellClassParams, GridReadyEvent, ICellRendererParams } from "@ag-grid-community/core";
import "@ag-grid-community/styles/ag-grid.css";
import "@ag-grid-community/styles/ag-theme-quartz.css";

type CategoryData = {
    id: number;
    name: string;
    ref: string;
    date: string;
    createdBy: string;
    approved: boolean;
    submitted: boolean;
    paid: boolean;
    status: string;
};

const checkboxRenderer = (params: ICellRendererParams) => {
    return <input type="checkbox" checked={params.value} readOnly />;
};

function PurchaseRequest() {
    const [rowData, setRowData] = useState<CategoryData[]>([]);
    const [summaryData, setSummaryData] = useState({
        totalCategories: 0,
        topCategoriesStock: 0,
        lowStockCategories: 0,
        recentlyUpdatedCategories: 0,
    });

    const [columnDefs] = useState<ColDef<CategoryData>[]>([
        { field: "id", flex: 1, headerName: "ID", filter: true, floatingFilter: true },
        { field: "name", flex: 1, headerName: "Name", filter: true, floatingFilter: true },
        { field: "ref", flex: 1, headerName: "Ref", filter: true, floatingFilter: true },
        { field: "date", flex: 1, headerName: "Date", filter: true, floatingFilter: true },
        { field: "createdBy", flex: 1, headerName: "Created By", filter: true, floatingFilter: true },
        {
            field: "approved",
            flex: 1,
            headerName: "Approved",
            cellRenderer: "checkboxRenderer", // Use the renderer function
        },
        {
            field: "submitted",
            flex: 1,
            headerName: "Submitted",
            cellRenderer: "checkboxRenderer", // Use the renderer function
        },
        {
            field: "paid",
            flex: 1,
            headerName: "Paid",
            cellRenderer: "checkboxRenderer", // Use the renderer function
        },
        {
            field: "status",
            flex: 1,
            headerName: "Status",
            cellStyle: (params: CellClassParams) => {
                const defaultStyle = { backgroundColor: '', color: '' };

                if (params.value === "Completed") {
                    return { backgroundColor: "#05C40D", color: "#ffffff" };
                } else if (params.value === "Rejected") {
                    return { backgroundColor: "#E80303", color: "#ffffff" };
                } else if (params.value === "Pending") {
                    return { backgroundColor: "#0099C9", color: "#ffffff" };
                }

                return defaultStyle;
            },
        }
    ]);

    useEffect(() => {
        const fetchData = async () => {
            try {
                // Fetch category data
                const categoryResponse = await axios.get("/api/category-data");
                setRowData(categoryResponse.data);

                // Fetch summary data
                const summaryResponse = await axios.get("/api/summary-data");
                setSummaryData(summaryResponse.data);
            } catch (error) {
                console.error("Error fetching data:", error);
                alert("An error occurred while fetching the data.");
            }
        };

        fetchData();
    }, []);

    return (
        <>
            <div className="container mt-4 z-1 rounded shadow min-vh-100">
                {/* Summary Cards */}
                <div className="container text-center my-4">
                    <div className="row g-2 g-lg-3">
                        <div className="col">
                            <div className="bg-light text-start p-4 rounded shadow-sm">
                                Total Requests <br />
                                <strong>{summaryData.totalCategories}</strong>
                            </div>
                        </div>
                        <div className="col">
                            <div className="bg-light text-start p-4 rounded shadow-sm">
                                Pending Requests <br />
                                <strong>{summaryData.topCategoriesStock}%</strong>
                            </div>
                        </div>
                        <div className="col">
                            <div className="bg-light text-start p-4 rounded shadow-sm">
                                Approved Requests <br />
                                <strong>{summaryData.lowStockCategories}</strong>
                            </div>
                        </div>
                        <div className="col">
                            <div className="bg-light text-start p-4 rounded shadow-sm">
                                Requests Over Time <br />
                                <strong>{summaryData.recentlyUpdatedCategories}</strong>
                            </div>
                        </div>
                    </div>
                </div>

                {/* Stores Table */}
                <div className="ag-theme-quartz" style={{ height: "500px", width: "100%" }}>
                    <AgGridReact
                        rowData={rowData}
                        columnDefs={columnDefs}
                        pagination={true}
                        paginationPageSize={10}
                        components={{
                            checkboxRenderer,
                        }}
                        onGridReady={(params: GridReadyEvent) => params.api.sizeColumnsToFit()}
                    />
                </div>
            </div>
        </>
    );
}

export default PurchaseRequest;
